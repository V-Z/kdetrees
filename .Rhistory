getwd()
setwd("..")
getwd()
library(devtools)
load_all()
setwd("kdetrees")
load_all()
load_all()
?cat
?print
load_all()
x <- c("foo=bar","baz=qux")
x
parse(x)
?parse
parse(text=x)
eval(parse(text=x))
y = c("x","y","z","q")
y
x
y
x
as.numeric("n")
?parse_args
library(optparse)
?parse_args
?OptionParser
?make_option
make_option("method")
?match.call
match.call(kdetrees)
kdetrees
match.call(definition=kdetrees)
?match.call
?match.arg
args(kdetrees)
str(args(kdetrees))
?args
?formals
formals(kdetrees)
?alist
alist(kdetrees.complete)
formals(kdetrees.complete)
names(formals(kdetrees.complete))
?setdiff
)
?OptionParser
type
?type
?make_option
?OptionParser
?parse_args
?OptionParser
?parse_args
?OptionParser
?OptionParser
?parse_args
parse_args
?OptionParser
list(a=2
)
list(a=2)[["1"]]
list(a=2)[["a"]]
NULL & TRUE
?"&"
NULL && TRUE
NULL & TRUE
as.logical(NULL) & TRUE
as.logical(NULL) | TRUE
as.logical(NULL)
?parse_args
?optparse
load_all()
document()
as.matrix(apicomplexa[1:5])
library(ape)
?cophenetic
document()
check()
document()
check()
install()
?kdetrees
install()
?kdetrees
document()
install()
?kdetrees
as.matrix(apicomplexa(1:5)
)
apicomplexa
apicomplexa[1:5]
as.matrix(apicomplexa[1:5])
dist.diss(apicomplexa[1:5])
as.matrix(dist.diss(apicomplexa[1:5]))
bw.nn(as.matrix(dist.diss(apicomplexa[1:5])))
kdetrees:::bw.nn(as.matrix(dist.diss(apicomplexa[1:5])))
document()
check()
q()
n
library(devtools)
build()
install("/Users/grady/src/kdetrees_0.1.3.tar.gz")
install.packages("/Users/grady/src/kdetrees_0.1.3.tar.gz")
install()
?kdetrees
?kdetrees
kdetrees
out.trees
lapply(out.trees,list)
str(lapply(out.trees,list),1)
lapply(out.trees,list)[[1]]
out.trees
seq_along(out.trees)
kdetrees
kdetrees
sim(2000,out.trees)
sim(2000,out.trees)
examples(dist.diss)
example(dist.diss)
kdetrees(apicomplexa,distance="d")
sim(2000,out.trees)
coal.trees
n
res.geo
kdetrees(c(otrees,coal.trees),distance="d")
kdetrees(structure(c(otrees,coal.trees),class="multiPhylo"),distance="d")
Q
sim(2000,out.trees)
sim(2000,out.trees)
sim(2000,out.trees[1:5])
sim(2000,out.trees[1:5])
pMCOA(out.trees)
pMCOA(out.trees[1:100])
detect.complete.outliers(pMCOA(out.trees[1:100]))
str(detect.complete.outliers(pMCOA(out.trees[1:100])))
detect.complete.outliers(pMCOA(out.trees[1:100]))$outgn
runs(out.trees[1:100])
runs(out.trees[1:100],1.5)
run.kde(out.trees,1.5)
run.kde(apicomplexa,1.5)
out.trees
run.kde(out.trees[1:100])
run.kde(out.trees[1:100],1.5)
pMCOA
pMCOA
trees2matrices
sim(2000,out.trees)
sim(2000,out.trees)
sim(2000,out.trees)
res.kde
res.pmc
+ + + + + + + + + + + + + + Browse[2]> res.pmc
Qres.pmc
Q
sim(2000,out.trees,fun=run.kde)
sim(2000,out.trees[1:10],fun=run.kde)
sim(2000,out.trees[1:10],fun=run.kde)
sim(2000,out.trees[1:10],fun=run.kde)
res
n
c
q
Q
sim(2000,out.trees[1:10],fun=run.kde)
sim(2000,out.trees[1:10],fun=run.kde)
res
res
res
res
res
res
res
res
res
res
res
res
sim(2000,out.trees[1:10],fun=run.pmcoa)
sim(2000,out.trees[1:10],fun=run.pmcoa,distance="p")
res
res
res
detect.complete.outliers(pMCOA(samp,distance),k)
detect.complete.outliers(pMCOA(samp,"p"),k)
str(detect.complete.outliers(pMCOA(samp,"p"),k))
Q
sim(2000,out.trees[1:10],fun=run.pmcoa,distance="p")
res
res
res
res
Q
sim(2000,out.trees[1:10],fun=run.pmcoa,distance="p")
sim(2000,out.trees[1:10],fun=run.pmcoa,distance="p")
sim(2000,out.trees[1:10],fun=run.kde,distance="g")
sim(2000,out.trees[1:10],fun=run.kde,distance="g")
sim(2000,out.trees[1:10],fun=run.pmcoa,distance="p")
sim(2000,out.trees[1:10],fun=run.pmcoa,distance="p")
sim(2000,out.trees[1:10],fun=run.kde,distance="g")
sim(2000,out.trees[1:10],k=0,fun=run.kde,distance="g")
sim(2000,out.trees[1:10],k=0,fun=run.pmcoa,distance="p")
sim(2000,out.trees[1:10],k=0,fun=run.pmcoa,distance="p")
sim2(1.5,2000,out.trees)
sim2(1.5,neff=2000,out.trees=out.trees,fun=run.kde)
sim2(1.5,neff=2000,out.trees=out.trees,fun=run.kde)
sim2(1.5,2000,out.trees)
sim2(1.5,2000,out.trees,fun=run.kde)
sim2(1.5,2000,out.trees[1:10],fun=run.kde)
sim2(1.5,2000,out.trees[1:100],fun=run.kde)
res
simplify2array(res)
t(simplify2array(res))
rev(t(simplify2array(res)))
plot(rev(t(simplify2array(res))))
rev(as.data.frame(t(simplify2array(res))))
plot(rev(as.data.frame(t(simplify2array(res)))))
plot(rev(as.data.frame(t(simplify2array(res)))),type="l")
plot(rev(as.data.frame(t(simplify2array(res)))),type="l",xlim=0:1)
res.pmc
plot(rev(as.data.frame(t(simplify2array(res.pmc)))),type="l",xlim=0:1,add=TRUE)
plot(rev(as.data.frame(t(simplify2array(res)))),type="l",xlim=0:1)
rev(as.data.frame(t(simplify2array(res))))
res.df <- rev(as.data.frame(t(simplify2array(res))))
plot(rev(as.data.frame(t(simplify2array(res)))),type="l",xlim=0:1)
lines(res.df[[1]],res.df[[2]])
plot(rev(as.data.frame(t(simplify2array(res)))),type="l",xlim=0:1)
res.df <- rev(as.data.frame(t(simplify2array(res.pmcoa))))
res.df <- rev(as.data.frame(t(simplify2array(res.pmc))))
plot(rev(as.data.frame(t(simplify2array(res)))),type="l",xlim=0:1)
lines(res.df[[1]],res.df[[2]])
lines(res.df[[1]],res.df[[2]],col=2)
n
n
n
