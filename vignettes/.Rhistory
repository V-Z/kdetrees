P
library(devtools)
getwd()
setwd("../..")
getwd()
build("kdetrees")
getwd()
setwd("../..")
load_all("kdetrees")
apicomplexa
kdetrees(apicomplexa)
apicomplexa
getwd()
setwd("../..")
getwd()
apicomplexa
apicomplexa[[1]]
bw.nn
kdetrees
dist.diss(apicomplexa)
dmx <- dist.diss(apicomplexa)
bw.nn(dmx)
dist.diss
str(apply(dmx(2,median)))
str(apply(dmx,2,median))
dim(dmx)
dmx <- dist.diss(apicomplexa)
dim(dmx)
str(dmx)
as.matrix(dmx)
dmx <- as.matrix(dist.diss(apicomplexa))
dim(dmx)
kdetrees
dist.diss
kdetrees
n
library(devtools)
load_all()
setwd("..")
load_all()
kdetrees
n
library(kdetrees)
getwd()
setwd("../..")
getwd()
load_all("kdetrees")
library(devtools)
load_all("kdetrees")
kdetrees
ls()
q()
n
library(devtools)
kdetrees
load_all()
setwd("../..")
load_all()
load_all("kdetrees")
kdetrees
build("kdetrees")
build("kdetrees")
build("kdetrees")
n
sim(2000,out.trees)
str(coaltrees)
coaltrees
c(otrees,coaltrees)
str(c(otrees,coaltrees))
str(c(otrees,coaltrees), max.level=0)
class(otrees)
class(coaltrees))
class(coaltrees)
out.trees
out.trees[[1]]
out.trees[[1]][[1]]
class(out.trees[[1]])
apicomplexa
apicomplexa[[1]]
c(apicomplexa[[1]])
Q
sim(2000,out.trees)
class(otrees)
n
f(c(otrees,coaltrees,distance="d")
f(c(otrees,coaltrees),...,distance="d")
Q
1
1
1
tpr.kde.d
options(mc.cores)
options(mc.core)
options()
o <- options()
?mcmapply
options(mc.cores=3)
tpr.pmc.d <- tpr.pmc.p
tpr.res
tpr.kde
1
roc.kde.mix
roc.df.mix
roc.kde.mix.d
roc.kde.d
roc.plot
tpr.kde.mix.d
roc.mix.plot
roc.kde.d
t(roc.kde.d)
t(roc.kde.mix.d)
t(tpr.kde.mix.d)
t(roc.kde.mix.d)
t(roc.pmc.mix)
roc.kde.d
t(roc.kde.d)
t(roc.kde)
t(roc.pmc)
t(roc.kde.mix)
t(roc.kde.mix.d)
t(roc.pmc.mix)
?labs
kdetrees
library(ape)
library(phangorn)
rtree
rtree
rtree()
rtree(50)
x <- rtree(50)
x
str(x)
1
1
1+!
231123
kdlf
1+1
str(x)
print(str(x))
x
x
q()
n
library(kdetrees)
out.trees
partition(10,out.trees)
sim
sim(2000,partition(10,out.trees),ncoal=90)
roc.kde.10
t(roc.kde.100
)
t(roc.kde.10)
t(roc.kde.5)
?read.csv
names(audit.raw)
summary(audit.raw)
summary(audit.raw[,vars])
summary(audit.raw[,vars])
summary(audit.raw[,vars])
unique(audit.raw$Sizedecile)
(audit.raw$Sizedecile)[1:100]
?read.csv
unique(audit.raw$Sizedecile)
summary(audit.raw$PATasoftotalassets)
pmcoa
detect.complete.outliers(pMCOA(apicomplexa))
detect.complete.outliers(pMCOA(apicomplexa))$scoregn
scoregn <- detect.complete.outliers(pMCOA(apicomplexa))$scoregn
kdetrees(apicomplexa)
kdetrees(apicomplexa)$density
kdescore <- kdetrees(apicomplexa)$density
cor(kdescore,scoregn)
plot(kdescore,scoregn)
abline(lm(kdescore,scoregn))
abline(lm(kdescore~scoregn))
abline(lm(scoregn~kdescore))
install.packages("Matching")
?Match
head(audit.raw$PCAOB)
unique(audit.raw$PCAOB)
class(audit.raw$PCAOB)
head(audit.raw)
head(audit.raw[,vars])
summary(audit.raw[,vars])
as.logical(audit.raw$PCAOB)
summary(as.logical(audit.raw$PCAOB))
glm(PCAOB~Agegroup+Sales+Inventories+Quickratiotimes+Totalliabilities,binomial,audit.raw)
audit.raw$Quickratiotimes
summary(audit.raw$Quickratiotimes)
summary(audit.raw$Currentratiotimes)
m <- glm(PCAOB~Agegroup+Sales+Inventories+Quickratiotimes+Totalliabilities,binomial,audit.raw)
with(audit.raw,Match(Auditfees,PCAOB,m$fitted,M=2))
str(m)
str(m)
with(m,Match(model$Auditfees,model$PCAOB,fitted,M=2))
Match(m$model$Auditfees,m$model$PCAOB,m$fitted,M=2)
summary(Match(m$model$Auditfees,m$model$PCAOB,m$fitted,M=2))
summary(Match(m$model$Auditfees,m$model$PCAOB,m$fitted,M=2,ties=TRUE,replace=TRUE))
gpl(PCAOB~.,binomial,audit.raw)
glm(PCAOB~.,binomial,audit.raw)
?Match
names(audit.raw)
sapply(audit.raw[,(sapply(audit.raw,class) == "factor")],unique)
sapply(audit.raw[,(sapply(audit.raw,class) == "factor")],function(x) length(unique))
sapply(audit.raw[,(sapply(audit.raw,class) == "factor")],function(x) length(unique(x)))
?data.frame
?[.data.frame
lapply(audit.raw,is.factor)
sapply(audit.raw,is.factor)
audit.raw[,sapply(audit.raw,is.factor)]
nlevels(1:3)
sapply(audit.raw,nlevels)
?within
?ifelse
audit <- within(audit.raw,{Inventories <- ifelse(is.na(Inventories),0.0,Inventories) })
?wca
audit <- base::within(audit.raw,{Inventories <- ifelse(is.na(Inventories),0.0,Inventories) })
summary(audit$Inventories)
?Match
sapply(audit,function(x) sum(is.na(x)))
unname(sapply(audit,function(x) sum(is.na(x))))
sapply(audit,function(x) sum(is.na(x)))/nrow(audit)
round(sapply(audit,function(x) sum(is.na(x)))/nrow(audit),2)
round(sapply(audit,function(x) sum(is.na(x)))/nrow(audit)<0.1
sapply(audit,function(x) sum(is.na(x)))/nrow(audit)<0.1
str(audit)
?omit.na
?omit.na
?na.omit
nrow(na.omit(audit))
nrow(audit)
23.6/3.9
23.6/39
head(audit)
nrow(na.omit(audit))
nrow(na.omit(audit))/3909
head(audit)
?stepAIC
fitted(glm(PCAOB~.,binomial,audit))
step(glm(PCAOB~.,binomial,audit))
?step
step(glm(PCAOB~.,binomial,audit),trace=0)
aov(glm(PCAOB~.,binomial,audit),trace=0)
summary(glm(PCAOB~.,binomial,audit),trace=0)
summary(glm(PCAOB~.,binomial,rev(audit)),trace=0)
summary(glm(PCAOB~.,binomial,rev(audit)),trace=0)
step(glm(PCAOB~1,binomial,rev(audit)),trace=0)
step(glm(PCAOB~1,binomial,rev(audit)))
step(glm(PCAOB~1,binomial,rev(audit)),direction="forward")
step(glm(PCAOB~.,binomial,rev(audit)),direction="forward")
step(glm(PCAOB~.,binomial,rev(audit)))
summary(glm(PCAOB~Agegroup+Sales,binomial,audit))
foo
bar <- function(x) system.time(x)
bar(sum(1:1e5))
bar(sum(1:1e4))
bar(sum(1:1.0e5))
bar(sum(1:1.1e5))
bar(sum(1:1.1e2))
1:1.1e2
bar(sum((1:1e5)+.1))
bar(sum((1:1e6)+.1))
bar(sum((1:1e7)+.1))
bar(sum((1:1e8)+.1))
bar(sum((1:1e9)+.1))
bar <- function(x) {x;system.time(x)}
bar(sum((1:1e9)+.1))
body(bar)
formals(bar)
environment(bar)
environment(kdetrees)
quote(x+y)
as.list(quote(x+y))
`+`
`<-`
?`<-`
body(`<-`)
as.call
`as.call`
`+`(1,2)
`+`(1,2,3)
`+`(1,2)
`+`(1)
`+`(2,2)
`+`(2)
all.equal
all:equal(1:10)
all.equal(1:10)
?all.equal
all.equal(1:10,TRUE)
all.equal(1:10>0,TRUE)
class(apicomplexa[[1]])
names(apicomplexa)
sapply(apicomplexa,inherits,"phylo")
all(sapply(apicomplexa,inherits,"phylo"))
kdetrees
kdetrees
kdetrees(unclass(apicomplexa))
unclass(list(1:5))
class(unclass(list(1:5)))
class(unclass(apicomplexa)
)
inherits(apicomplexa,"multiPhylo")
all(sapply(apicomplexa,inherits,"phylo"))
kdetrees(unclass(apicomplexa))
class(trees)
inherits(trees,"multiPhylo")
!inherits(trees,"multiPhylo")
!inherits(trees,"multiPhylo") && all(sapply(trees,inherits,"phylo"))
n
class(trees)
class(trees)
kdetrees(unclass(apicomplexa),distance="d")
C
c
devtools()
nlibrary
